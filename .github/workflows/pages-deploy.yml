name: Build and Deploy

on:
  push:
    branches: [ main, master ]
    paths-ignore:
      - .gitignore
      - README.md
      - LICENSE
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      # GitHub Pages 구성 (base_path 확보)
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5

      # Ruby + Bundler (Jekyll, htmlproofer용)
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.3'
          bundler-cache: true

      # Node (자산 빌드용)
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install Node dependencies
        run: npm install --no-audit --no-fund

      - name: Build JS/CSS assets
        run: npm run build:node

      # Jekyll 빌드 (Pages base_path 반영)
      - name: Build Jekyll site
        env:
          JEKYLL_ENV: production
        run: bundle exec jekyll build -d "_site${{ steps.pages.outputs.base_path }}"

      # HTML 검증: htmlproofer 사용 (Ruby 기반, glob 문제 없음)
      - name: Test site (htmlproofer)
        run: |
          bundle exec htmlproofer "_site${{ steps.pages.outputs.base_path }}" \
            --disable-external \
            --ignore-urls "/^http:\/\/(127\.0\.0\.1|0\.0\.0\.0|localhost)/"

      # 산출물 업로드
      - name: Upload site artifact
        uses: actions/upload-pages-artifact@v4
        with:
          path: "_site${{ steps.pages.outputs.base_path }}"

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
